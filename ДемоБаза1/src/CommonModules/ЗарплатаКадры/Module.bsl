///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии ...
///////////////////////////////////////////////////////////////////////////////////////////////////////

//Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюТТНВходящаяЕГАИС(Параметры) Экспорт
//	
//	ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС";
//	
//	ТекстЗапроса = 
//	"ВЫБРАТЬ
//	|	ДанныеДляОбработки.Ссылка              КАК Ссылка,
//	|	ДанныеДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
//	|	ДанныеДокумента.Ссылка                 КАК ПриобретениеТоваровУслуг,
//	|	ДанныеДокумента.ВерсияДанных           КАК ПриобретениеТоваровУслугВерсияДанных
//	|ИЗ
//	|	ВтСсылкиДляОбработки КАК ДанныеДляОбработки
//	|	
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
//	|		ПО ДанныеДляОбработки.Ссылка = ДанныеДокумента.УдалитьТоварноТранспортнаяНакладнаяЕГАИС
//	|	
//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
//	|		ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
//	|	
//	|ГДЕ
//	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
//	|";
//	
//	ТаблицыДляЧтения = Новый Массив;
//	ТаблицыДляЧтения.Добавить("Документ.ПриобретениеТоваровУслуг");
//	
//	Запрос = Новый Запрос(ТекстЗапроса);
//	
//	Выборка = Запрос.Выполнить().Выбрать();
//	
//	Пока Выборка.Следующий() Цикл
//		
//		НачатьТранзакцию();
//		
//		Попытка
//			
//			Блокировка = Новый БлокировкаДанных;
//			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
//			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
//			Блокировка.Заблокировать();
//			
//			Блокировка = Новый БлокировкаДанных;
//			ЭлементБлокировки = Блокировка.Добавить("Документ.ПриобретениеТоваровУслуг");
//			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ПриобретениеТоваровУслуг);
//			Блокировка.Заблокировать();
//			
//			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
//			Если ДокументОбъект = Неопределено Тогда
//				
//				ЗафиксироватьТранзакцию();
//				Продолжить;
//				
//			КонецЕсли;
//			
//			Если ДокументОбъект.ВерсияДанных <> Выборка.ВерсияДанных Тогда
//				
//				ОтменитьТранзакцию();
//				Продолжить;
//				
//			КонецЕсли;
//			
//			Если Не ЗначениеЗаполнено(Выборка.ПриобретениеТоваровУслуг) Тогда
//				
//				ЗафиксироватьТранзакцию();
//				Продолжить;
//				
//			КонецЕсли;
//			
//			ПриобретениеТоваровУслугОбъект = Выборка.ПриобретениеТоваровУслуг.ПолучитьОбъект();
//			Если ПриобретениеТоваровУслугОбъект = Неопределено Тогда
//				
//				ЗафиксироватьТранзакцию();
//				Продолжить;
//				
//			КонецЕсли;
//			
//			Если ПриобретениеТоваровУслугОбъект.ВерсияДанных <> Выборка.ПриобретениеТоваровУслугВерсияДанных Тогда
//				
//				ОтменитьТранзакцию();
//				Продолжить;
//				
//			КонецЕсли;
//			
//			ДокументОбъект.ДокументОснование = Выборка.ПриобретениеТоваровУслуг;
//			
//			ЗафиксироватьТранзакцию();
//			
//		Исключение
//			
//			ОтменитьТранзакцию();
//			
//			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
//			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.Ссылка);
//			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
//			
//			ЗаписьЖурналаРегистрации(
//				"",
//				УровеньЖурналаРегистрации.Ошибка,
//				Метаданные.Документы.ТТНВходящаяЕГАИС,
//				Выборка.Ссылка,
//				ТекстСообщения);
//			
//			Продолжить;
//			
//		КонецПопытки;
//		
//	КонецЦикла;
//	
//КонецПроцедуры

//Процедура ПриВыгрузкеДанныхСлужебный(Источник) Экспорт
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("");
	
//	УдалитьФайлы("");//синхронный вызов
//	
//КонецПроцедуры