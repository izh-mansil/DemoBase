///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии ...
///////////////////////////////////////////////////////////////////////////////////////////////////////

//нгшенгш

//  Адрес - Строка - адрес во временном хранилище,
//        - УникальныйИдентификатор - уникальный идентификатор формы, во временное хранилище которой, надо поместить
//          данные и
//          вернуть новый адрес (см. ПоместитьВоВременноеХранилище).


#Область ПрограммныйИнтерфейс

Функция ЗапуститьПлатформу(ИсходныеПараметрыЗапуска, ЗаголовокОшибки, Сервер = Неопределено, ВерсияПриложения = "",
	ПоказыватьДиалогиИСообщения = Ложь, ПропуститьЕслиПрограммаНеУстановлена = Ложь,
	ПропуститьКромеИБНеобнаружена = Ложь, ПропуститьЕслиПользовательИБНеИдентифицирован = Ложь,
	ОшибкаРегистрации = Ложь)
	
	Глобальный.Реквизиты1();
	
	РезультатПоследнегоУспешногоЗапускаПлатформы = Неопределено;
	
	ПараметрыЗапуска = ИсходныеПараметрыЗапуска;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	КаталогПрограммы = КаталогПрограммы();
	Если ЗначениеЗаполнено(ВерсияПриложения) Тогда
		ТекущаяВерсияПриложения = ВерсияПриложения;
		КаталогПрограммы = СтрЗаменить(КаталогПрограммы, СистемнаяИнформация.ВерсияПриложения, ВерсияПриложения);
	Иначе
		ТекущаяВерсияПриложения = СистемнаяИнформация.ВерсияПриложения;
	КонецЕсли;
	ТекущийКаталогПлатформы = КаталогПрограммы;
	
	ФайлПрограммы = КаталогПрограммы + ?(СтрНайти(ПараметрыЗапуска, "ENTERPRISE") > 0, "1cv8c.exe", "1cv8.exe");
	Если НайтиФайлы(ФайлПрограммы).Количество() = 0 Тогда
		Если ПропуститьЕслиПрограммаНеУстановлена Тогда
			Возврат Истина;
		КонецЕсли;
		//ОбработатьОшибку(ЗаголовокОшибки, СтрШаблон(
		//	НСтр("ru = 'Не найден файл 1С:Предприятия ""%1""'"), ФайлПрограммы), Сервер, ОшибкаРегистрации);
		Возврат Ложь;
	КонецЕсли;
	
	РезультатЗапуска = Неопределено;
	Попытка
		ИмяФайлаСообщений = ПолучитьИмяВременногоФайла(".txt");
		
		Если СтрНайти(ПараметрыЗапуска, "/Debug") = 0 Тогда
			ПараметрыЗапуска = ПараметрыЗапуска + " /Debug";
		КонецЕсли;
		
		ПараметрыЗапуска = ПараметрыЗапуска
			+ " /AppAutoCheckVersion-"
			+ ?(Не ПоказыватьДиалогиИСообщения, " /DisableStartupDialogs /DisableStartupMessages", "")
			+ " /Out """ + ИмяФайлаСообщений + """";
		
		//ЗапуститьПрограмму("""" + ФайлПрограммы + """ " + ПараметрыЗапуска, РезультатЗапуска, ТекущаяВерсияПриложения);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		//ДобавитьКонтекстЗапускаКТекстуОшибки(ТекстОшибки, РезультатЗапуска);
		//ОбработатьОшибку(ЗаголовокОшибки, ТекстОшибки, Сервер, ОшибкаРегистрации);
		Возврат Ложь;
	КонецПопытки;
	
	Если РезультатЗапуска.КодВозврата = 0 Тогда
		РезультатПоследнегоУспешногоЗапускаПлатформы = РезультатЗапуска;
		Возврат Истина;
	КонецЕсли;
	
	Попытка
		СообщенияСистемы = Новый ТекстовыйДокумент;
		СообщенияСистемы.Прочитать(ИмяФайлаСообщений);
	Исключение
		СообщенияСистемы = Новый ТекстовыйДокумент;
	КонецПопытки;
	
	Сообщения = СообщенияСистемы.ПолучитьТекст();
	
	СтрокаПоиска = НСтр("ru = 'Различаются версии клиента и сервера ('");
	Позиция = СтрНайти(Сообщения, СтрокаПоиска);
	Если ВерсияПриложения = "" И Позиция > 0 Тогда
		Строка = Сред(Сообщения, Позиция + СтрДлина(СтрокаПоиска));
		Позиция = СтрНайти(Строка, ")");
		Если Позиция > 0 И Позиция < 27 Тогда
			Строка = Лев(Строка, Позиция - 1);
			Позиция = СтрНайти(Строка, "-");
			Если Позиция > 0 Тогда
				ВерсияКлиента = СокрЛП(Лев(Строка, Позиция - 1));
				ВерсияСервера = СокрЛП(Сред(Строка, Позиция + 1));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаПоиска = НСтр("ru = 'Несоответствие версий клиентского приложения и сервера хранилища конфигурации.'");
	Позиция = СтрНайти(Сообщения, СтрокаПоиска);
	Если ВерсияПриложения = "" И Позиция > 0 Тогда
		СтрокаПоискаВерсииКлиента = НСтр("ru = '(Версия клиентского приложения:'");
		ПозицияВерсииКлиента = СтрНайти(Сообщения, СтрокаПоискаВерсииКлиента);
		СтрокаПоискаВерсииСервера = НСтр("ru = 'Версия сервера хранилища конфигурации:'");
		ПозицияВерсииСервера = СтрНайти(Сообщения, СтрокаПоискаВерсииСервера);
		Если ПозицияВерсииКлиента > 0 И ПозицияВерсииСервера > 0 Тогда
			ПозицияВерсииКлиента = ПозицияВерсииКлиента + СтрДлина(СтрокаПоискаВерсииКлиента);
			ВерсияКлиента = СокрЛП(Сред(Сообщения, ПозицияВерсииКлиента, ПозицияВерсииСервера - ПозицияВерсииКлиента));
			ПозицияВерсииСервера = ПозицияВерсииСервера + СтрДлина(СтрокаПоискаВерсииСервера);
			Строка = Сред(Сообщения, ПозицияВерсииСервера);
			Позиция = СтрНайти(Строка, ")");
			Если Позиция > 0 Тогда
				ВерсияСервера = СокрЛП(Лев(Строка, Позиция - 1));
			Иначе
				ВерсияКлиента = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ВерсияКлиента = СистемнаяИнформация.ВерсияПриложения Тогда
		Успех = ЗапуститьПлатформу(ИсходныеПараметрыЗапуска, ЗаголовокОшибки, Сервер, ВерсияСервера,
			ПоказыватьДиалогиИСообщения, ПропуститьЕслиПрограммаНеУстановлена,
			ПропуститьКромеИБНеобнаружена, ПропуститьЕслиПользовательИБНеИдентифицирован, ОшибкаРегистрации);
		Если Успех Тогда
			ВерсияПриложения = ВерсияСервера;
		КонецЕсли;
		Возврат Успех;
	КонецЕсли;
	
	Если ПропуститьКромеИБНеобнаружена
	   И СокрЛП(Сообщения) <> НСтр("ru = 'Информационная база не обнаружена!'") Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Если ПропуститьЕслиПользовательИБНеИдентифицирован
	   И СокрЛП(Сообщения) = НСтр("ru = 'Пользователь ИБ не идентифицирован'") Тогда
		
		ПропуститьЕслиПользовательИБНеИдентифицирован = Ложь;
		Возврат Истина;
	КонецЕсли;
	
	ТекстОшибки = СтрШаблон(
		НСтр("ru = 'Код возврата = %1, сообщения системы:
		           |%2'"), РезультатЗапуска.КодВозврата, СообщенияСистемы.ПолучитьТекст());
	
	//ДобавитьКонтекстЗапускаКТекстуОшибки(ТекстОшибки, РезультатЗапуска);
	//ОбработатьОшибку(ЗаголовокОшибки, ТекстОшибки, Сервер, ОшибкаРегистрации);
	
	Возврат Ложь;
	
КонецФункции

// фывааа. см. процедуру ОбщегоНазначения.ПерейтиПоСсылке()
//
// Параметры:
//  Параметр - см. ОбщийМодуль5.НаРасположениеКоторойРугаетсяАПК.Параметр1.
// 
Процедура ПроверкаТранзакций(Знач Параметр) Экспорт 
	
	//фывасмт = "прол";
	//
	//НачатьТранзакцию();
	//Попытка
	//	
	//	Если Ложь Тогда 
	//		ОтменитьТранзакцию();
	//	КонецЕсли;
	//	
	//	ЗафиксироватьТранзакцию();
	//Исключение
	//	
	//	Пока ТранзакцияАктивна() Цикл
	//		ОтменитьТранзакцию();
	//	КонецЦикла;
	//КонецПопытки;
	
	СерверныеСобытия = Новый Массив;
	
	// См. ЗарплатаКадры.ПриВыгрузкеДанныхСлужебный1.
	СерверныеСобытия.Добавить("СтандартныеПодсистемы.ОбменДанными\ПриВыгрузкеДанныхСлужебный");
	
КонецПроцедуры

// см. Справочник.Справочник1.а1
Функция а12(Действие, Контекст, ПолноеИмяФайла) Экспорт
	
	//Модуль2 = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбщийМодуль2ВызовСервера");
	//Модуль2.ПодписатьФайл();
	
	//ОбщегоНазначенияКлиент.ОбщийМодуль("ОбщийМодуль2ВызовСервера").ПодписатьФайл();
	
	Если Действие = "ПОМЕСТИТЬ" Тогда
		ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла);
		ПомещаемыеФайлы = Новый Массив;
		ПомещаемыеФайлы.Добавить(ОписаниеФайла);
		НачатьПомещениеФайлов(Новый ОписаниеОповещения(
				"ОбработатьФайлПослеПомещенияФайлов", ЭтотОбъект, Контекст,
				"ОбработатьФайлПослеОшибки", ЭтотОбъект),
			ПомещаемыеФайлы, , Ложь, Контекст.ИдентификаторФормы);
	КонецЕсли;
	
	ТекстВопроса = 
		"Сейчас будет предложено ВЫБРАТЬ файл для того,
		|чтобы ПОМЕСТИТЬ его В программу И закончить редактирование.
		|
		|Найдите нужный файл В том каталоге, который вы
		|указывали ранее при начале редактирования.";
		
	
КонецФункции

// См. Функция1
Функция Функция1(параметр1 		= "") Экспорт 
	
	
	
КонецФункции

// См. ОбщийМодуль1.Функция1.
// Параметры:
//
Функция Функция2(параметр2) Экспорт 
	
	Функция1();
	//ОбщийМодуль1.Функция2();
	
КонецФункции

&НаКлиенте
// См. процедуру Справочники.Справочник1.п2.
Процедура РегламентноеЗаданиеОбработчик() Экспорт 
	
	ТекстЗапроса = "";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ";
	
КонецПроцедуры

&НаКлиенте
// Устарела. См. процедуру Справочник.Справочник1.п2.
Процедура ПодпискаНаСобытие1ПередЗаписью(Источник, Отказ) Экспорт
	
	//Если Источник.ОбменДанными.Загрузка И (НЕ ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи()) Тогда
	//	Возврат;
	//КонецЕсли;
	
	а = 123123;
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("", "");
	
КонецПроцедуры


#КонецОбласти
