///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии ...
///////////////////////////////////////////////////////////////////////////////////////////////////////

//#Область ОбработчикиСобытийФормы

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	
//	Подразделение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Подразделение");
//	ДатаНачала = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ДатаНачала");
//	ДатаОкончания = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ДатаОкончания");
//	
//	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, 
//		"Подразделение", Подразделение);
//	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, 
//		"ДатаНачала", ДатаНачала, ЗначениеЗаполнено(ДатаНачала));
//	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, 
//		"ДатаОкончания", ДатаОкончания, ЗначениеЗаполнено(ДатаОкончания));

//	Если Параметры.Свойство("АдресПодобранных") Тогда
//		ПодобранныеДанные.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресПодобранных));
//		Список.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ПодобранныеДанные",
//			ОбщегоНазначения.ТаблицаЗначенийВМассив(ПолучитьИзВременногоХранилища(Параметры.АдресПодобранных)));
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
//	
//	Если ЗавершениеРаботы Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если Не Элементы.Список.РежимВыбора Или Не Элементы.Список.МножественныйВыбор Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если ВсеВыбранные.Количество() = 0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Отказ = Истина;
//	НачатьВопросОВыбореПодобранных();

//КонецПроцедуры

//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

//&НаКлиенте
//Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
//	
//	Если Не Элементы.Список.РежимВыбора Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если Не Элементы.Список.МножественныйВыбор Тогда
//		Возврат;
//	КонецЕсли;
//	
//	СтандартнаяОбработка = Ложь;
//	Если Значение.Количество() > 1 Или ВсеВыбранные.Количество() = 0 Тогда
//		ОбновитьПодобранные(Значение);
//	КонецЕсли;

//	ВыполнитьВыбор();
//	ВсеВыбранные.Очистить();
//	Закрыть();
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
//	
//	Если Не Элементы.Список.РежимВыбора Тогда
//		Возврат;
//	КонецЕсли;

//	Если Не Элементы.Список.МножественныйВыбор Тогда
//		Возврат;
//	КонецЕсли;

//	СтандартнаяОбработка = Ложь;
//	ОбновитьПодобранные(ВыбраннаяСтрока);
//	
//КонецПроцедуры

//&НаСервереБезКонтекста
//Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
//	
//	Для Каждого Элемент Из Строки Цикл
//		СтрокаСписка = Элемент.Значение;
//		Если СтрокаПодобрана(Настройки, Элемент.Ключ, СтрокаСписка.Данные) Тогда
//			Для Каждого КлючИЗначение Из СтрокаСписка.Оформление Цикл
//				КлючИЗначение.Значение.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстПодобранногоЗначенияЦвет);
//			КонецЦикла;
//		КонецЕсли;
//		ОформитьПолеСпособОпределенияСтоимости(СтрокаСписка);
//	КонецЦикла;
//	
//КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

//&НаКлиенте
//Процедура ОбновитьПодобранные(Выбранные)
//	
//	Для Каждого Элемент Из Выбранные Цикл
//		Если Не ЕстьВПодобранных(Элемент) Тогда
//			Подобранные.Добавить(Элемент);
//			ВсеВыбранные.Добавить(Элемент);
//		КонецЕсли;
//	КонецЦикла;
//	
//	Список.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("Подобранные", Подобранные.ВыгрузитьЗначения());
//	
//КонецПроцедуры

//&НаКлиенте
//Функция ЕстьВПодобранных(ЭтапСсылка)
//	Возврат Подобранные.НайтиПоЗначению(ЭтапСсылка) <> Неопределено;
//КонецФункции

//&НаКлиенте
//Процедура НачатьВопросОВыбореПодобранных()
//	
//	ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
//	ПараметрыВопроса.Заголовок = НСтр("ru = 'Подбор мероприятий по ИПР'");
//	ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
//	
//	СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
//		Новый ОписаниеОповещения("ЗавершитьВопросОВыбореВыбранных", ЭтотОбъект), 
//		НСтр("ru = 'Выбрать подобранные мероприятия?'"), 
//		РежимДиалогаВопрос.ДаНетОтмена,
//		ПараметрыВопроса);
//		
//КонецПроцедуры

//&НаКлиенте
//Процедура ЗавершитьВопросОВыбореВыбранных(Ответ, ДополнительныеПараметры) Экспорт
//	
//	Если Ответ = Неопределено Или Ответ.Значение = КодВозвратаДиалога.Отмена Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если Ответ.Значение = КодВозвратаДиалога.Да Тогда
//		ВыполнитьВыбор();
//	КонецЕсли;
//	
//	ВсеВыбранные.Очистить();
//	Закрыть();
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ВыполнитьВыбор()
//	
//	ДанныеВыбора = Новый Массив;
//	Для Каждого Элемент Из ВсеВыбранные.ВыгрузитьЗначения() Цикл
//		Описание = ОписаниеВыбранногоЭлемента();
//		ЗаполнитьЗначенияСвойств(Описание, Элементы.Список.ДанныеСтроки(Элемент));
//		ОтборСтрок = ОтборСтрок();
//		ЗаполнитьЗначенияСвойств(ОтборСтрок, Описание);
//		Если ПодобранныеДанные.НайтиСтроки(ОтборСтрок).Количество() = 0 Тогда
//			ДанныеВыбора.Добавить(Описание);
//		КонецЕсли;
//	КонецЦикла;
//	
//	ОповеститьОВыборе(ДанныеВыбора);
//	
//КонецПроцедуры

//&НаКлиентеНаСервереБезКонтекста
//Функция ОписаниеВыбранногоЭлемента()
//	
//	Описание = Новый Структура(
//		"ИПР, 
//		|ФизическоеЛицо, 
//		|Мероприятие, 
//		|ДатаНачала, 
//		|ДатаОкончания, 
//		|Подразделение, 
//		|КоличествоУчебныхЧасов, 
//		|СуммаРасходов");
//	
//	Возврат Описание;
//	
//КонецФункции

//&НаСервереБезКонтекста
//Функция СтрокаПодобрана(Настройки, КлючСтроки, ДанныеСтроки)

//	Если Настройки.ДополнительныеСвойства.Свойство("Подобранные") Тогда
//		Если Настройки.ДополнительныеСвойства.Подобранные.Найти(КлючСтроки) <> Неопределено Тогда
//			Возврат Истина;
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если Настройки.ДополнительныеСвойства.Свойство("ПодобранныеДанные") Тогда
//		ОтборСтрок = ОтборСтрок();
//		ЗаполнитьЗначенияСвойств(ОтборСтрок, ДанныеСтроки);
//		Возврат НайтиСтрокиВМассивеСтрок(Настройки.ДополнительныеСвойства.ПодобранныеДанные, ОтборСтрок).Количество() > 0;
//	КонецЕсли;
//	
//КонецФункции

//&НаКлиентеНаСервереБезКонтекста
//Функция ОтборСтрок()
//	Возврат Новый Структура("ИПР, Мероприятие, ДатаНачала, ДатаОкончания");
//КонецФункции

//&НаСервереБезКонтекста
//Функция НайтиСтрокиВМассивеСтрок(МассивСтрок, Отбор)
//	
//	НайденныеСтроки = Новый Массив;
//	
//	Для Каждого Элемент Из МассивСтрок Цикл
//		Подходит = Истина;
//		Для Каждого КлючЗначение Из Отбор Цикл
//			Если Элемент[КлючЗначение.Ключ] <> КлючЗначение.Значение Тогда
//				Подходит = Ложь;
//				Прервать;
//			КонецЕсли;
//		КонецЦикла;
//		Если Подходит Тогда
//			НайденныеСтроки.Добавить(Элемент);
//		КонецЕсли;
//	КонецЦикла;
//	
//	Возврат НайденныеСтроки;

//КонецФункции

//&НаСервереБезКонтекста
//Процедура ОформитьПолеСпособОпределенияСтоимости(СтрокаСписка)
//	
//	Если СтрокаСписка.Данные.СпособОпределенияСтоимости = Перечисления.СпособыРасчетаСуммыРасходовНаПерсонал.СуммаКратнаКоличествуСотрудников Тогда
//		СпособСтоимостиПредставление = НСтр("ru = 'за каждого участника'");
//	ИначеЕсли СтрокаСписка.Данные.СпособОпределенияСтоимости = Перечисления.СпособыРасчетаСуммыРасходовНаПерсонал.СуммаНеЗависитОтКоличестваСотрудников Тогда
//		СпособСтоимостиПредставление = НСтр("ru = 'за всех участников'");
//	Иначе
//		СпособСтоимостиПредставление = "";
//	КонецЕсли;
//	СтрокаСписка.Оформление["СпособОпределенияСтоимости"].УстановитьЗначениеПараметра("Текст", СпособСтоимостиПредставление);
//	
//КонецПроцедуры

//#КонецОбласти