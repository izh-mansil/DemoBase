///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии ...
///////////////////////////////////////////////////////////////////////////////////////////////////////

// ++ НЕ УТКА

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// фывафывафыва
//
// Параметры:
//  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
//   ПараметрыАдминистрированияКластера - см. АдминистрированиеКластера.ПараметрыАдминистрированияКластера
//   Фильтр - Структура - параметры фильтрации рабочих серверов:
//       * ОпределитьНастройкиФормы - Булево - отчет имеет программный интерфейс для тесной интеграции с формой отчета,
//           в том числе может переопределять некоторые настройки формы и подписываться на ее события.
//           Если Истина и отчет подключен к общей форме ФормаОтчета,
//           тогда в модуле объекта отчета следует определить процедуру по шаблону:
//               
//               // Задать настройки формы отчета.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения, Неопределено - 
//               //   КлючВарианта - Строка, Неопределено - 
//               //   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//               //
//               Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
//               	// Код процедуры.
//               КонецПроцедуры
//  ВариантОбъект - СправочникОбъект.ВариантыОтчетов - объект варианта отчета, где:
//  ИзмененныеПодсистемы - Массив из СтрокаДереваЗначений - строки дерева значений, содержащий измененные настройки
//      размещения, где:
//      * Ссылка - СправочникСсылка.ИдентификаторыОбъектовРасширений
//               - СправочникСсылка.ИдентификаторыОбъектовМетаданных - идентификатор метаданных подсистемы.
//      * Важность - Строка - степень важности отчета для соответствующей подсистемы.
//
// Возвращаемое значение:
//   ТаблицаЗначений - ТаблицаЗначений - таблица с колонками:
//     * Ссылка                    - СправочникСсылка.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы
//                                 - СправочникСсылка.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы - 
//                                   ссылка на присоединенный файл.
//     * Наименование              - Строка - имя файла.
//     * Размер                    - Число - размер файла.
//     * ИДФайлаЭлектронногоПисьма - Строка - идентификатор картинки, которая отображается в тексте письма.
//
Функция ф2(ИдентификаторКластера, ПараметрыАдминистрированияКластера, Фильтр)
	
	
КонецФункции

// функция тестовая без параметров.
//
// Параметры:
//   * Значение - см. ОписаниеКолонки
//
// Возвращаемое значение:
//   см. ИнициализироватьТаблицу
//
Функция ф1()
	
КонецФункции

// Параметры:
//   ТаблицаПараметров - см. РаботаВМоделиСервиса.ПолучитьТаблицуПараметровИБ
//   ОписанияПрофилей - Массив из см. УправлениеДоступомПереопределяемый.ПриЗаполненииПоставляемыхПрофилейГруппДоступа.
//   ОписанияПрофилей1 - Массив, Неопределено - фвыафывафыв фыва.
//   Флаг - Булево - флаг показывающий..
//   Строка - Строка
//   ШаблонАнкеты - СправочникСсылка.ШаблоныАнкет, по которому проводился опрос.
//
// Возвращаемое значение:
//  Строка - строка, содержащая ключи структуры разделенные разделителем.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  Отказ - Булево - Истина, если отказ.
//  Замещение - Булево - флаг замещения.
//  ИскатьТолькоБудущиеДаты - Булево - Ложь, если требуется найти дату в прошлом.
//  СловарьТипов	- Соответствие из КлючИЗначение:
//    * Ключ - имя типа инцидента
//    * Значение - Структура - с описанием типа (создается)
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//    * Ключ - ссылка на объект
//    * Значение - значение прочитанного реквизита
//  Булево - Истина, если есть ссылки на объект.
//
Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Получает строку, содержащую ключи структуры, разделенные символом разделителя.
//
// Параметры:
//  Структура - Структура - структура, ключи которой преобразуются в строку:
//   * Ключ - Строка - ключ
//   * Значение - ЛюбойТип - значение
//  Разделитель - Строка - разделитель, который вставляется в строку между ключами структуры.
//
// Возвращаемое значение:
//  Строка - строка, содержащая ключи структуры разделенные разделителем.
//
Функция КлючиСтруктурыВСтроку(Структура, Разделитель = ",") Экспорт
	
	Результат = "";
	
	Для Каждого Элемент Из Структура Цикл
		
		СимволРазделителя = ?(ПустаяСтрока(Результат), "", Разделитель);
		
		Результат = Результат + СимволРазделителя + Элемент.Ключ;
		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

// Процедура-обертка, выполняет запуск указанной в параметрах процедуры модуля менеджера обмена через формат.
//
// Параметры:
//  ИмяПроцедуры - Строка - имя процедуры этого модуля.
//  Параметры - Структура
//  ...
//
Процедура ВыполнитьПроцедуруМодуляМенеджера(ИмяПроцедуры, Параметры) Экспорт
	
КонецПроцедуры

// Читает и устанавливает здания и помещения адреса. 
//
//  Параметры:
//    ЗагружаемыеДанные -ТаблицаЗначений:
//       * СопоставленныйОбъект         - СправочникСсылка - ссылка на сопоставленный объект.
//       * РезультатСопоставленияСтроки - Строка       - статус загрузки, возможны варианты: Создан, Обновлен, Пропущен.
//       * ОписаниеОшибки               - Строка       - расшифровка ошибки загрузки данных.
//       * Идентификатор                - Число        - уникальный номер строки
//       <другие колонки>               - Произвольный - Строки за загружаемого файла в соответствие с макетом.
//
//  Возвращаемое значение:
//      Структура - текущие данные. Содержит поля:
//          * Здания - ТаблицаЗначений:
//                        ** Тип        - Строка - тип внутреннего классификатора дополнительных адресных объектов.
//                                                 Например "Корпус".
//                        ** Сокращение - Строка - сокращение названия для использования в представлении.
//                        ** Значение   - Строка - значение номера дома, квартиры и т.п.
//                        ** ПутьXPath  - Строка - путь к значению объекта.
//          * Помещения - ТаблицаЗначений - с колонками, аналогично полю Здание.
//
Функция ЗданияИПомещенияАдреса(XDTOАдрес, НовоеЗначение = Неопределено)
	
КонецФункции

// Функция возвращает настройку отражения в бухучете из РС ОтражениеВРегламентированномУчетеНастройкиОрганизаций.
//
// Возвращаемое значение:
//  Структура:
//  * ФормироватьПроводкиВКонцеПериода - тип Булево, Истина, если хотя бы в одной организации проводки формируются в
//	                                     конце месяца.
//  * ФормироватьПроводкиВКонцеПериодаПоОрганизациям - Соответствие из КлючИЗначение:
//      ** Ключ - Организация
//      ** Значение - значение настройки ФормироватьПроводкиВКонцеПериода
//
Функция ОтражениеВРегламентированномУчетеНастройкиОрганизаций() Экспорт

КонецФункции

// Заполняет таблицу значений, содержащую данные для начисления зарплаты.
//
// Параметры:
//  см. РасчетЗарплаты.РезультатНачисленияРасчетаЗарплаты
//  МесяцНачисления - в базовой реализации начисления получаются 
//  только за месяц в целом, а не за произвольный период.
//
Функция РезультатНачисленияРасчетаЗарплаты(Организация, МесяцНачисления, Документ, Подразделение, Сотрудники) Экспорт
	
КонецФункции

// Обработчик редактирования стандартного периода.
//
// Параметры:
//  РезультатВыбора - Структура
//                  - СтандартныйПериод - значение, возвращенное диалогом.
//  Контекст - Структура - содержит форму отчета (настроек) и путь к значению периода.
//
Процедура ВыбратьПериодЗавершение(РезультатВыбора, Контекст) Экспорт
	
КонецПроцедуры

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

// -- НЕ УТКА